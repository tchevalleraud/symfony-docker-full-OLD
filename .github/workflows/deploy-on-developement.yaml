name: Deploy on development server
on:
    push:
        branches: [master, develop]
jobs:
    init:
        runs-on: [development]
        steps:
            - name: Check directory exist
              id: check-directory
              continue-on-error: true
              run: |
                  cd ./dev/
                  echo ::set-output name=exist::true
            - name: Update exist project
              if: steps.check-directory.outputs.exist == 'true'
              run: |
                  cd ./dev/
                  git checkout master
                  git add .
                  git reset --hard
                  git fetch origin --tags
                  git pull
            - name: Deploy new project
              if: steps.check-directory.outputs.exist != 'true'
              run: |
                  git clone git@github.com:tchevalleraud/symfony-docker-full.git
                  mv symfony-docker-full/ dev/
                  cd ./dev/
                  git checkout master
            - name: Update environment
              run: |
                  cd ./dev/
                  rm .env
                  touch .env
                  echo "APP_ENV=dev" >> .env
    build:
        runs-on: [development]
        needs: [init]
        steps:
            - name: Build docker image
              run: |
                  cd ./dev/
                  make docker-build
            - name: Build dependancies
              run: |
                  cd ./dev/
                  make vendor/autoload.php
                  make public/assets-dev
    deploy:
        runs-on: [development]
        needs: [build]
        steps:
            - name: Start docker environment
              run: |
                  cd ./dev/
                  make server-start
                  sleep 15
            - name: Database deployment
              run: |
                  cd ./dev/
                  make doctrine-database-create
            - name: Cache clear
              run: |
                  cd ./dev/
                  make cache-clear
    tests-globals:
        runs-on: [development]
        needs: [deploy]
        steps:
            - name: UnitTest
              run: |
                  cd ./dev/
                  make test-unit-globals
    tests-frontoffice:
        runs-on: [development]
        needs: [deploy]
        steps:
            - name: UnitTest
              run: |
                  cd ./dev/
                  make test-unit-frontoffice
    screenshot:
        runs-on: [development]
        needs: [tests-globals, tests-frontoffice]
        steps:
            - name: Screenshot
              run: |
                  cd ./dev/
                  make test-screenshot
            - name: Upload artifact
              uses: actions/upload-artifact@v2
              with:
                  name: Screenshot
                  path: ./dev/screenshot/